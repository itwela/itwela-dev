{"version":3,"file":"hamo.modern.mjs","sources":["../src/hooks/use-click-outside-event.js","../src/hooks/use-is-client.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["/**\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\n * @param {Object} ref - React ref for the element to listen for clicks outside of\n * @param {Function} callback - callback function to call when a click outside of the element is detected\n */\n\nimport { useCallback, useEffect } from 'react'\n\nexport function useOutsideClickEvent(ref, callback) {\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback()\n      }\n    },\n    [ref, callback]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }\n  }, [handleClickOutside, ref])\n}\n","// This component is used to check if the window object is present.\nimport { useEffect, useState } from 'react'\n\nexport function useIsClient() {\n  const [isClient, setClient] = useState(false)\n\n  useEffect(() => {\n    setClient(true)\n  }, [])\n\n  return isClient\n}\n","import { useMemo } from 'react'\nimport { useIsClient } from './use-is-client'\n\nexport function useDebug() {\n  const isClient = useIsClient()\n\n  const debug = useMemo(() => {\n    if (!isClient) return undefined\n\n    const location = window.location\n    const search = location.search\n    const href = location.href\n    const searchParams = new URLSearchParams(search)\n\n    const isDebug =\n      href.includes('#debug') || // localhost:3000/#debug\n      href.includes('/_debug') || // localhost:3000/_debug\n      searchParams.has('debug') || // localhost:3000/?debug\n      // eslint-disable-next-line no-undef\n      process.env.NODE_ENV === 'development' // localhost:3000\n\n    const isProduction =\n      href.includes('#production') || // localhost:3000/#production\n      searchParams.has('production') // localhost:3000/?production\n\n    return isDebug && !isProduction\n  }, [isClient])\n\n  return debug\n}\n","// useDocumentReadyState.js\n// This code is a custom hook that returns the current document.readyState\n// The useLayoutEffect hook is used to set the state of the document\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useDocumentReadyState\n * @description A React hook that listen to document.readyState.\n * @returns {string} document.readyState\n */\n\nexport function useDocumentReadyState() {\n  const [readyState, setReadyState] = useState()\n\n  useEffect(() => {\n    function onStateChange() {\n      setReadyState(document.readyState)\n    }\n\n    document.addEventListener('readystatechange', onStateChange, false)\n    onStateChange()\n\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\n  }, [])\n\n  return readyState\n}\n","/**\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\n * @param {Function} callback - A function that is called every frame.\n * @param {Number} priority - A number that determines the order in which the callback is called.\n */\n\nimport Tempus from '@studio-freight/tempus'\nimport { useEffect } from 'react'\n\nexport function useFrame(callback, priority = 0) {\n  useEffect(() => {\n    if (callback) {\n      Tempus.add(callback, priority)\n\n      return () => Tempus.remove(callback)\n    }\n  }, [callback, priority])\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * @name useIntersectionObserver\n * @description A React hook that oberves element visibility using IntersectionObserver.\n * @param {HTMLElement} root\n * @param {string} rootMargin\n * @param {number} threshold\n * @param {boolean} once\n * @param {boolean} lazy\n * @param {function} callback\n * @param {array} deps\n * @returns {array} [setElement, entry]\n */\n\nexport function useIntersectionObserver(\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\n  deps = []\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const intersection = new IntersectionObserver(\n      ([entry]) => {\n        if (lazy) {\n          entryRef.current = entry\n        } else {\n          setEntry(entry)\n        }\n\n        callback(entry)\n\n        if (once && entry.isIntersecting) intersection.disconnect()\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    )\n    intersection.observe(element)\n\n    return () => {\n      intersection.disconnect()\n    }\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","/**\n * This function allows you to set an interval in a functional component\n * @param {function} callback - The callback function\n * @param {number} delay - The delay between each interval\n */\n\nimport { useEffect } from 'react'\n\nexport function useInterval(callback, delay = 1000, deps = []) {\n  useEffect(() => {\n    const interval = setInterval(callback, delay)\n    return () => clearInterval(interval)\n  }, [delay, ...deps])\n}\n","/*\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\n  as well as the maxTouchPoints property on the navigator object. It also checks the\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\n*/\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useIsTouchDevice\n * @description A React hook that detects if the device supports touch.\n * @returns {boolean} Whether the device supports touch or not.\n */\n\nexport function useIsTouchDevice() {\n  const [isTouchDevice, setIsTouchDevice] = useState()\n\n  useEffect(() => {\n    function onResize() {\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\n    }\n\n    window.addEventListener('resize', onResize, false)\n    onResize()\n\n    return () => {\n      window.removeEventListener('resize', onResize, false)\n    }\n  }, [])\n\n  return isTouchDevice\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * @name useMediaQuery\n * @description A React hook that detects whether a media query is true or false.\n * @param {string} queryString The media query to test against.\n * @returns {boolean} Whether the media query is true or false.\n */\n\nexport function useMediaQuery(queryString) {\n  const [isMatch, setIsMatch] = useState()\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(queryString)\n\n    function onChange() {\n      setIsMatch(mediaQuery.matches)\n    }\n\n    mediaQuery.addEventListener('change', onChange, false)\n    onChange()\n\n    return () => mediaQuery.removeEventListener('change', onChange, false)\n  }, [queryString])\n\n  return isMatch\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport debounce from 'just-debounce-it'\n\n/**\n * useResizeObserver - observe elements dimensions using ResizeObserver\n * @param {Boolean} lazy - should return a state or not\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\n * @param {String} box - ResizeObserver parameter\n * @param {Function} callback - called on value change\n * @param {Array} deps - props that should trigger a new computation\n */\n\nexport function useResizeObserver(\n  { lazy = false, debounce: debounceDelay = 500, box = 'border-box', callback = () => {} } = {},\n  deps = [],\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const onResize = debounce(\n      ([entry]) => {\n        entryRef.current = entry\n\n        callback(entry)\n\n        if (!lazy) {\n          setEntry(entry)\n        }\n      },\n      debounceDelay,\n      true,\n    )\n\n    const resizeObserver = new ResizeObserver(onResize)\n    resizeObserver.observe(element, { box })\n\n    return () => {\n      resizeObserver.disconnect()\n      onResize.cancel()\n    }\n  }, [element, lazy, debounceDelay, box, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","import { useResizeObserver } from './use-resize-observer'\nimport debounce from 'just-debounce-it'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { create } from 'zustand'\nimport { createNanoEvents } from 'nanoevents'\n\nfunction removeParentSticky(element) {\n  const position = getComputedStyle(element).position\n\n  const isSticky = position === 'sticky'\n\n  if (isSticky) {\n    element.style.setProperty('position', 'static')\n    element.dataset.sticky = 'true'\n  }\n\n  if (element.offsetParent) {\n    removeParentSticky(element.offsetParent)\n  }\n}\n\nfunction addParentSticky(element) {\n  if (element?.dataset?.sticky === 'true') {\n    element.style.removeProperty('position')\n    element.dataset.sticky = 'true'\n    delete element.dataset.sticky\n  }\n\n  if (element.parentNode) {\n    addParentSticky(element.parentNode)\n  }\n}\n\nfunction offsetTop(element, accumulator = 0) {\n  const top = accumulator + element.offsetTop\n  if (element.offsetParent) {\n    return offsetTop(element.offsetParent, top)\n  }\n  return top\n}\n\nfunction offsetLeft(element, accumulator = 0) {\n  const left = accumulator + element.offsetLeft\n  if (element.offsetParent) {\n    return offsetLeft(element.offsetParent, left)\n  }\n  return left\n}\n\nfunction scrollTop(element, accumulator = 0) {\n  const top = accumulator + element.scrollTop\n  if (element.offsetParent) {\n    return scrollTop(element.offsetParent, top)\n  }\n  return top + window.scrollY\n}\n\nfunction scrollLeft(element, accumulator = 0) {\n  const left = accumulator + element.scrollLeft\n  if (element.offsetParent) {\n    return scrollLeft(element.offsetParent, left)\n  }\n  return left + window.scrollX\n}\n\nconst useStore = create((set) => ({\n  elements: [],\n  addElement: (element) => {\n    set((state) => ({\n      elements: [...state.elements, element],\n    }))\n  },\n  removeElement: (element) => {\n    set((state) => ({\n      elements: state.elements.filter((el) => el !== element),\n    }))\n  },\n}))\n\nfunction observe(element) {\n  useStore.getState().addElement(element)\n}\n\nfunction unobserve(element) {\n  useStore.getState().removeElement(element)\n}\n\nconst emitter = createNanoEvents()\n\nfunction resize() {\n  emitter.emit('resize')\n}\n\n/**\n * useRect - observe elements BoundingRect\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\n * @param {boolean} ignoreSticky - should ingnore parent sticky elements or not\n * @param {boolean} lazy - should return a state or a getter\n * @param {number} debounce - minimum delay between two rect computations\n * @param {Function} callback - called on value change\n */\n\nexport function useRect({\n  ignoreTransform = false,\n  ignoreSticky = true,\n  lazy = false,\n  debounce: debounceDelay = 500,\n  callback = () => {},\n} = {}) {\n  const [element, setElement] = useState()\n  const [rect, setRect] = useState({})\n  const rectRef = useRef({})\n\n  const onElementResize = useCallback(\n    (entry) => {\n      const width = entry.borderBoxSize[0].inlineSize\n      const height = entry.borderBoxSize[0].blockSize\n\n      rectRef.current.width = width\n      rectRef.current.height = height\n\n      callback(rectRef.current)\n\n      if (!lazy) {\n        setRect({ ...rectRef.current })\n      }\n    },\n    [lazy],\n  )\n\n  const [setResizeObserverElement] = useResizeObserver(\n    {\n      lazy: true,\n      debounce: debounceDelay,\n      callback: onElementResize,\n    },\n    [debounceDelay, onElementResize],\n  )\n\n  const elements = useStore(({ elements }) => elements)\n\n  const onParentsResize = useCallback(() => {\n    if (!element) return\n\n    let top, left\n\n    if (ignoreSticky) removeParentSticky(element)\n    if (ignoreTransform) {\n      top = offsetTop(element)\n      left = offsetLeft(element)\n    } else {\n      const rect = element.getBoundingClientRect()\n      top = rect.top + scrollTop(element)\n      left = rect.left + scrollLeft(element)\n    }\n    if (ignoreSticky) addParentSticky(element)\n\n    rectRef.current.top = top\n    rectRef.current.left = left\n\n    callback(rectRef.current)\n\n    if (!lazy) {\n      setRect({ ...rectRef.current })\n    }\n  }, [ignoreTransform, ignoreSticky, lazy, element])\n\n  // resize if body height changes\n  useEffect(() => {\n    const debouncedOnParentsResize = debounce(onParentsResize, debounceDelay, true)\n\n    const resizeObserver = new ResizeObserver(debouncedOnParentsResize)\n    resizeObserver.observe(document.body)\n\n    elements.forEach((element) => {\n      resizeObserver.observe(element)\n    })\n\n    return () => {\n      resizeObserver.disconnect()\n      debouncedOnParentsResize.cancel()\n    }\n  }, [elements, debounceDelay, onParentsResize])\n\n  const getRect = useCallback(() => rectRef.current, [])\n\n  useEffect(() => {\n    function onResize() {\n      if (!element) return\n      const elementRect = element.getBoundingClientRect()\n\n      rectRef.current.width = elementRect.width\n      rectRef.current.height = elementRect.height\n\n      onParentsResize()\n    }\n\n    const unbind = emitter.on('resize', onResize)\n\n    return unbind\n  }, [element, onParentsResize])\n\n  return [\n    (node) => {\n      setElement(node)\n      setResizeObserverElement(node)\n    },\n    lazy ? getRect : rect,\n  ]\n}\n\nuseRect.observe = observe\nuseRect.unobserve = unobserve\nuseRect.resize = resize\n","// This code is used to extract the contents of a component's children and return them as an array.\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\n// The code returns an array of the children of the components passed in the types argument.\n// based on:\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\n\nimport { useMemo } from 'react'\n\nexport function useSlots(types = [], children = []) {\n  const _children = useMemo(() => children && [children].flat(), [children])\n  const _types = useMemo(() => types && [types].flat(), [types])\n  const slots = useMemo(() => {\n    if (!_children || !_types) {\n      return\n    }\n\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\n\n    return types[0] ? slots : slots[0]\n  }, [_children, _types])\n\n  return slots\n}\n","import { useEffect, useState } from 'react'\nimport debounce from 'just-debounce-it'\n\n/**\n * @name useWindowSize\n * @description A React hook that listens to window size.\n * @returns {object} { width, height }\n */\n\nexport function useWindowSize(debounceDelay = 500) {\n  const [width, setWidth] = useState()\n  const [height, setHeight] = useState()\n\n  useEffect(() => {\n    const onWindowRezise = debounce(\n      () => {\n        setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\n        setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\n      },\n      debounceDelay,\n      true,\n    )\n\n    window.addEventListener('resize', onWindowRezise, false)\n\n    onWindowRezise()\n\n    return () => window.removeEventListener('resize', onWindowRezise, false)\n  }, [debounceDelay])\n\n  return { width, height }\n}\n"],"names":["useOutsideClickEvent","ref","callback","useCallback","event","current","contains","target","useEffect","document","addEventListener","handleClickOutside","removeEventListener","useIsClient","isClient","setClient","useState","useDebug","useMemo","location","window","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","useDocumentReadyState","readyState","setReadyState","onStateChange","useFrame","priority","Tempus","add","remove","useIntersectionObserver","root","rootMargin","threshold","once","lazy","deps","entryRef","useRef","entry","setEntry","element","setElement","isIntersecting","intersection","disconnect","observe","get","useInterval","delay","interval","setInterval","clearInterval","useIsTouchDevice","isTouchDevice","setIsTouchDevice","onResize","navigator","maxTouchPoints","msMaxTouchPoints","useMediaQuery","queryString","isMatch","setIsMatch","mediaQuery","matchMedia","matches","onChange","useResizeObserver","debounce","debounceDelay","box","resizeObserver","ResizeObserver","cancel","removeParentSticky","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_element$dataset","removeProperty","parentNode","offsetTop","accumulator","top","offsetLeft","left","scrollTop","scrollY","scrollLeft","scrollX","useStore","create","set","elements","addElement","state","removeElement","filter","el","emitter","createNanoEvents","useRect","ignoreTransform","ignoreSticky","rect","setRect","rectRef","onElementResize","height","borderBoxSize","blockSize","width","inlineSize","setResizeObserverElement","onParentsResize","getBoundingClientRect","_extends","debouncedOnParentsResize","body","forEach","getRect","on","elementRect","node","useSlots","types","children","_children","flat","_types","slots","map","type","find","_children$find","props","useWindowSize","setWidth","setHeight","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","onWindowRezise","getState","unobserve","resize","emit"],"mappings":"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"}