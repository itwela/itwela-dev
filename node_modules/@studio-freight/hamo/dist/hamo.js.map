{"version":3,"file":"hamo.js","sources":["../src/hooks/use-is-client.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-click-outside-event.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["// This component is used to check if the window object is present.\nimport { useEffect, useState } from 'react'\n\nexport function useIsClient() {\n  const [isClient, setClient] = useState(false)\n\n  useEffect(() => {\n    setClient(true)\n  }, [])\n\n  return isClient\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport debounce from 'just-debounce-it'\n\n/**\n * useResizeObserver - observe elements dimensions using ResizeObserver\n * @param {Boolean} lazy - should return a state or not\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\n * @param {String} box - ResizeObserver parameter\n * @param {Function} callback - called on value change\n * @param {Array} deps - props that should trigger a new computation\n */\n\nexport function useResizeObserver(\n  { lazy = false, debounce: debounceDelay = 500, box = 'border-box', callback = () => {} } = {},\n  deps = [],\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const onResize = debounce(\n      ([entry]) => {\n        entryRef.current = entry\n\n        callback(entry)\n\n        if (!lazy) {\n          setEntry(entry)\n        }\n      },\n      debounceDelay,\n      true,\n    )\n\n    const resizeObserver = new ResizeObserver(onResize)\n    resizeObserver.observe(element, { box })\n\n    return () => {\n      resizeObserver.disconnect()\n      onResize.cancel()\n    }\n  }, [element, lazy, debounceDelay, box, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","import { useResizeObserver } from './use-resize-observer'\nimport debounce from 'just-debounce-it'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { create } from 'zustand'\nimport { createNanoEvents } from 'nanoevents'\n\nfunction removeParentSticky(element) {\n  const position = getComputedStyle(element).position\n\n  const isSticky = position === 'sticky'\n\n  if (isSticky) {\n    element.style.setProperty('position', 'static')\n    element.dataset.sticky = 'true'\n  }\n\n  if (element.offsetParent) {\n    removeParentSticky(element.offsetParent)\n  }\n}\n\nfunction addParentSticky(element) {\n  if (element?.dataset?.sticky === 'true') {\n    element.style.removeProperty('position')\n    element.dataset.sticky = 'true'\n    delete element.dataset.sticky\n  }\n\n  if (element.parentNode) {\n    addParentSticky(element.parentNode)\n  }\n}\n\nfunction offsetTop(element, accumulator = 0) {\n  const top = accumulator + element.offsetTop\n  if (element.offsetParent) {\n    return offsetTop(element.offsetParent, top)\n  }\n  return top\n}\n\nfunction offsetLeft(element, accumulator = 0) {\n  const left = accumulator + element.offsetLeft\n  if (element.offsetParent) {\n    return offsetLeft(element.offsetParent, left)\n  }\n  return left\n}\n\nfunction scrollTop(element, accumulator = 0) {\n  const top = accumulator + element.scrollTop\n  if (element.offsetParent) {\n    return scrollTop(element.offsetParent, top)\n  }\n  return top + window.scrollY\n}\n\nfunction scrollLeft(element, accumulator = 0) {\n  const left = accumulator + element.scrollLeft\n  if (element.offsetParent) {\n    return scrollLeft(element.offsetParent, left)\n  }\n  return left + window.scrollX\n}\n\nconst useStore = create((set) => ({\n  elements: [],\n  addElement: (element) => {\n    set((state) => ({\n      elements: [...state.elements, element],\n    }))\n  },\n  removeElement: (element) => {\n    set((state) => ({\n      elements: state.elements.filter((el) => el !== element),\n    }))\n  },\n}))\n\nfunction observe(element) {\n  useStore.getState().addElement(element)\n}\n\nfunction unobserve(element) {\n  useStore.getState().removeElement(element)\n}\n\nconst emitter = createNanoEvents()\n\nfunction resize() {\n  emitter.emit('resize')\n}\n\n/**\n * useRect - observe elements BoundingRect\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\n * @param {boolean} ignoreSticky - should ingnore parent sticky elements or not\n * @param {boolean} lazy - should return a state or a getter\n * @param {number} debounce - minimum delay between two rect computations\n * @param {Function} callback - called on value change\n */\n\nexport function useRect({\n  ignoreTransform = false,\n  ignoreSticky = true,\n  lazy = false,\n  debounce: debounceDelay = 500,\n  callback = () => {},\n} = {}) {\n  const [element, setElement] = useState()\n  const [rect, setRect] = useState({})\n  const rectRef = useRef({})\n\n  const onElementResize = useCallback(\n    (entry) => {\n      const width = entry.borderBoxSize[0].inlineSize\n      const height = entry.borderBoxSize[0].blockSize\n\n      rectRef.current.width = width\n      rectRef.current.height = height\n\n      callback(rectRef.current)\n\n      if (!lazy) {\n        setRect({ ...rectRef.current })\n      }\n    },\n    [lazy],\n  )\n\n  const [setResizeObserverElement] = useResizeObserver(\n    {\n      lazy: true,\n      debounce: debounceDelay,\n      callback: onElementResize,\n    },\n    [debounceDelay, onElementResize],\n  )\n\n  const elements = useStore(({ elements }) => elements)\n\n  const onParentsResize = useCallback(() => {\n    if (!element) return\n\n    let top, left\n\n    if (ignoreSticky) removeParentSticky(element)\n    if (ignoreTransform) {\n      top = offsetTop(element)\n      left = offsetLeft(element)\n    } else {\n      const rect = element.getBoundingClientRect()\n      top = rect.top + scrollTop(element)\n      left = rect.left + scrollLeft(element)\n    }\n    if (ignoreSticky) addParentSticky(element)\n\n    rectRef.current.top = top\n    rectRef.current.left = left\n\n    callback(rectRef.current)\n\n    if (!lazy) {\n      setRect({ ...rectRef.current })\n    }\n  }, [ignoreTransform, ignoreSticky, lazy, element])\n\n  // resize if body height changes\n  useEffect(() => {\n    const debouncedOnParentsResize = debounce(onParentsResize, debounceDelay, true)\n\n    const resizeObserver = new ResizeObserver(debouncedOnParentsResize)\n    resizeObserver.observe(document.body)\n\n    elements.forEach((element) => {\n      resizeObserver.observe(element)\n    })\n\n    return () => {\n      resizeObserver.disconnect()\n      debouncedOnParentsResize.cancel()\n    }\n  }, [elements, debounceDelay, onParentsResize])\n\n  const getRect = useCallback(() => rectRef.current, [])\n\n  useEffect(() => {\n    function onResize() {\n      if (!element) return\n      const elementRect = element.getBoundingClientRect()\n\n      rectRef.current.width = elementRect.width\n      rectRef.current.height = elementRect.height\n\n      onParentsResize()\n    }\n\n    const unbind = emitter.on('resize', onResize)\n\n    return unbind\n  }, [element, onParentsResize])\n\n  return [\n    (node) => {\n      setElement(node)\n      setResizeObserverElement(node)\n    },\n    lazy ? getRect : rect,\n  ]\n}\n\nuseRect.observe = observe\nuseRect.unobserve = unobserve\nuseRect.resize = resize\n","import { useMemo } from 'react'\nimport { useIsClient } from './use-is-client'\n\nexport function useDebug() {\n  const isClient = useIsClient()\n\n  const debug = useMemo(() => {\n    if (!isClient) return undefined\n\n    const location = window.location\n    const search = location.search\n    const href = location.href\n    const searchParams = new URLSearchParams(search)\n\n    const isDebug =\n      href.includes('#debug') || // localhost:3000/#debug\n      href.includes('/_debug') || // localhost:3000/_debug\n      searchParams.has('debug') || // localhost:3000/?debug\n      // eslint-disable-next-line no-undef\n      process.env.NODE_ENV === 'development' // localhost:3000\n\n    const isProduction =\n      href.includes('#production') || // localhost:3000/#production\n      searchParams.has('production') // localhost:3000/?production\n\n    return isDebug && !isProduction\n  }, [isClient])\n\n  return debug\n}\n","// useDocumentReadyState.js\n// This code is a custom hook that returns the current document.readyState\n// The useLayoutEffect hook is used to set the state of the document\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useDocumentReadyState\n * @description A React hook that listen to document.readyState.\n * @returns {string} document.readyState\n */\n\nexport function useDocumentReadyState() {\n  const [readyState, setReadyState] = useState()\n\n  useEffect(() => {\n    function onStateChange() {\n      setReadyState(document.readyState)\n    }\n\n    document.addEventListener('readystatechange', onStateChange, false)\n    onStateChange()\n\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\n  }, [])\n\n  return readyState\n}\n","/**\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\n * @param {Function} callback - A function that is called every frame.\n * @param {Number} priority - A number that determines the order in which the callback is called.\n */\n\nimport Tempus from '@studio-freight/tempus'\nimport { useEffect } from 'react'\n\nexport function useFrame(callback, priority = 0) {\n  useEffect(() => {\n    if (callback) {\n      Tempus.add(callback, priority)\n\n      return () => Tempus.remove(callback)\n    }\n  }, [callback, priority])\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * @name useIntersectionObserver\n * @description A React hook that oberves element visibility using IntersectionObserver.\n * @param {HTMLElement} root\n * @param {string} rootMargin\n * @param {number} threshold\n * @param {boolean} once\n * @param {boolean} lazy\n * @param {function} callback\n * @param {array} deps\n * @returns {array} [setElement, entry]\n */\n\nexport function useIntersectionObserver(\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\n  deps = []\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const intersection = new IntersectionObserver(\n      ([entry]) => {\n        if (lazy) {\n          entryRef.current = entry\n        } else {\n          setEntry(entry)\n        }\n\n        callback(entry)\n\n        if (once && entry.isIntersecting) intersection.disconnect()\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    )\n    intersection.observe(element)\n\n    return () => {\n      intersection.disconnect()\n    }\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","/**\n * This function allows you to set an interval in a functional component\n * @param {function} callback - The callback function\n * @param {number} delay - The delay between each interval\n */\n\nimport { useEffect } from 'react'\n\nexport function useInterval(callback, delay = 1000, deps = []) {\n  useEffect(() => {\n    const interval = setInterval(callback, delay)\n    return () => clearInterval(interval)\n  }, [delay, ...deps])\n}\n","/*\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\n  as well as the maxTouchPoints property on the navigator object. It also checks the\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\n*/\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useIsTouchDevice\n * @description A React hook that detects if the device supports touch.\n * @returns {boolean} Whether the device supports touch or not.\n */\n\nexport function useIsTouchDevice() {\n  const [isTouchDevice, setIsTouchDevice] = useState()\n\n  useEffect(() => {\n    function onResize() {\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\n    }\n\n    window.addEventListener('resize', onResize, false)\n    onResize()\n\n    return () => {\n      window.removeEventListener('resize', onResize, false)\n    }\n  }, [])\n\n  return isTouchDevice\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * @name useMediaQuery\n * @description A React hook that detects whether a media query is true or false.\n * @param {string} queryString The media query to test against.\n * @returns {boolean} Whether the media query is true or false.\n */\n\nexport function useMediaQuery(queryString) {\n  const [isMatch, setIsMatch] = useState()\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(queryString)\n\n    function onChange() {\n      setIsMatch(mediaQuery.matches)\n    }\n\n    mediaQuery.addEventListener('change', onChange, false)\n    onChange()\n\n    return () => mediaQuery.removeEventListener('change', onChange, false)\n  }, [queryString])\n\n  return isMatch\n}\n","/**\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\n * @param {Object} ref - React ref for the element to listen for clicks outside of\n * @param {Function} callback - callback function to call when a click outside of the element is detected\n */\n\nimport { useCallback, useEffect } from 'react'\n\nexport function useOutsideClickEvent(ref, callback) {\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback()\n      }\n    },\n    [ref, callback]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }\n  }, [handleClickOutside, ref])\n}\n","// This code is used to extract the contents of a component's children and return them as an array.\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\n// The code returns an array of the children of the components passed in the types argument.\n// based on:\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\n\nimport { useMemo } from 'react'\n\nexport function useSlots(types = [], children = []) {\n  const _children = useMemo(() => children && [children].flat(), [children])\n  const _types = useMemo(() => types && [types].flat(), [types])\n  const slots = useMemo(() => {\n    if (!_children || !_types) {\n      return\n    }\n\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\n\n    return types[0] ? slots : slots[0]\n  }, [_children, _types])\n\n  return slots\n}\n","import { useEffect, useState } from 'react'\nimport debounce from 'just-debounce-it'\n\n/**\n * @name useWindowSize\n * @description A React hook that listens to window size.\n * @returns {object} { width, height }\n */\n\nexport function useWindowSize(debounceDelay = 500) {\n  const [width, setWidth] = useState()\n  const [height, setHeight] = useState()\n\n  useEffect(() => {\n    const onWindowRezise = debounce(\n      () => {\n        setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\n        setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\n      },\n      debounceDelay,\n      true,\n    )\n\n    window.addEventListener('resize', onWindowRezise, false)\n\n    onWindowRezise()\n\n    return () => window.removeEventListener('resize', onWindowRezise, false)\n  }, [debounceDelay])\n\n  return { width, height }\n}\n"],"names":["useIsClient","_useState","useState","isClient","setClient","useEffect","useResizeObserver","_temp","deps","_ref","lazy","_ref$lazy","debounce","debounceDelay","_ref$debounce","box","_ref$box","callback","_ref$callback","useRef","entry","setEntry","element","_useState2","setElement","onResize","_ref2","entryRef","current","resizeObserver","ResizeObserver","observe","disconnect","cancel","useCallback","get","removeParentSticky","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_element$dataset","removeProperty","parentNode","offsetTop","accumulator","top","offsetLeft","left","scrollTop","window","scrollY","scrollLeft","scrollX","useStore","create","set","elements","addElement","state","concat","removeElement","filter","el","emitter","createNanoEvents","useRect","_ref$ignoreTransform","ignoreTransform","_ref$ignoreSticky","ignoreSticky","rect","setRect","onElementResize","borderBoxSize","blockSize","rectRef","width","inlineSize","height","_extends","setResizeObserverElement","onParentsResize","_rect","getBoundingClientRect","debouncedOnParentsResize","document","body","forEach","getRect","on","elementRect","node","getState","unobserve","resize","emit","useDebug","useMemo","location","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","readyState","setReadyState","onStateChange","addEventListener","removeEventListener","priority","Tempus","add","remove","root","_ref$root","rootMargin","_ref$rootMargin","threshold","_ref$threshold","_ref$once","once","intersection","IntersectionObserver","isIntersecting","delay","interval","setInterval","clearInterval","isTouchDevice","setIsTouchDevice","navigator","maxTouchPoints","msMaxTouchPoints","queryString","isMatch","setIsMatch","matchMedia","onChange","mediaQuery","matches","ref","event","contains","target","handleClickOutside","types","children","_children","flat","_types","slots","map","type","_children$find","find","props","setWidth","setHeight","onWindowRezise","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight"],"mappings":"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"}