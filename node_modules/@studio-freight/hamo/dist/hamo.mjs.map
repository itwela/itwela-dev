{"version":3,"file":"hamo.mjs","sources":["../src/hooks/use-click-outside-event.js","../src/hooks/use-is-client.js","../src/hooks/use-debug.js","../src/hooks/use-document-ready-state.js","../src/hooks/use-frame.js","../src/hooks/use-intersection-observer.js","../src/hooks/use-interval.js","../src/hooks/use-is-touch-device.js","../src/hooks/use-media-query.js","../src/hooks/use-resize-observer.js","../src/hooks/use-rect.js","../src/hooks/use-slots.js","../src/hooks/use-window-size.js"],"sourcesContent":["/**\n * useOutsideClickEvent - custom hook that listens for clicks outside of a component\n * @param {Object} ref - React ref for the element to listen for clicks outside of\n * @param {Function} callback - callback function to call when a click outside of the element is detected\n */\n\nimport { useCallback, useEffect } from 'react'\n\nexport function useOutsideClickEvent(ref, callback) {\n  const handleClickOutside = useCallback(\n    (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        callback()\n      }\n    },\n    [ref, callback]\n  )\n\n  useEffect(() => {\n    if (ref.current) {\n      document.addEventListener('mousedown', handleClickOutside)\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside)\n      }\n    }\n  }, [handleClickOutside, ref])\n}\n","// This component is used to check if the window object is present.\nimport { useEffect, useState } from 'react'\n\nexport function useIsClient() {\n  const [isClient, setClient] = useState(false)\n\n  useEffect(() => {\n    setClient(true)\n  }, [])\n\n  return isClient\n}\n","import { useMemo } from 'react'\nimport { useIsClient } from './use-is-client'\n\nexport function useDebug() {\n  const isClient = useIsClient()\n\n  const debug = useMemo(() => {\n    if (!isClient) return undefined\n\n    const location = window.location\n    const search = location.search\n    const href = location.href\n    const searchParams = new URLSearchParams(search)\n\n    const isDebug =\n      href.includes('#debug') || // localhost:3000/#debug\n      href.includes('/_debug') || // localhost:3000/_debug\n      searchParams.has('debug') || // localhost:3000/?debug\n      // eslint-disable-next-line no-undef\n      process.env.NODE_ENV === 'development' // localhost:3000\n\n    const isProduction =\n      href.includes('#production') || // localhost:3000/#production\n      searchParams.has('production') // localhost:3000/?production\n\n    return isDebug && !isProduction\n  }, [isClient])\n\n  return debug\n}\n","// useDocumentReadyState.js\n// This code is a custom hook that returns the current document.readyState\n// The useLayoutEffect hook is used to set the state of the document\n// The useEffect hook is used to set the state of the document to 'complete' when the document is ready\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useDocumentReadyState\n * @description A React hook that listen to document.readyState.\n * @returns {string} document.readyState\n */\n\nexport function useDocumentReadyState() {\n  const [readyState, setReadyState] = useState()\n\n  useEffect(() => {\n    function onStateChange() {\n      setReadyState(document.readyState)\n    }\n\n    document.addEventListener('readystatechange', onStateChange, false)\n    onStateChange()\n\n    return () => document.removeEventListener('readystatechange', onStateChange, false)\n  }, [])\n\n  return readyState\n}\n","/**\n * Creates a requestAnimationFrame loop and manages the lifecycle of the callback.\n * @param {Function} callback - A function that is called every frame.\n * @param {Number} priority - A number that determines the order in which the callback is called.\n */\n\nimport Tempus from '@studio-freight/tempus'\nimport { useEffect } from 'react'\n\nexport function useFrame(callback, priority = 0) {\n  useEffect(() => {\n    if (callback) {\n      Tempus.add(callback, priority)\n\n      return () => Tempus.remove(callback)\n    }\n  }, [callback, priority])\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\n\n/**\n * @name useIntersectionObserver\n * @description A React hook that oberves element visibility using IntersectionObserver.\n * @param {HTMLElement} root\n * @param {string} rootMargin\n * @param {number} threshold\n * @param {boolean} once\n * @param {boolean} lazy\n * @param {function} callback\n * @param {array} deps\n * @returns {array} [setElement, entry]\n */\n\nexport function useIntersectionObserver(\n  { root = null, rootMargin = '0px', threshold = 0, once = false, lazy = false, callback = () => {} } = {},\n  deps = []\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const intersection = new IntersectionObserver(\n      ([entry]) => {\n        if (lazy) {\n          entryRef.current = entry\n        } else {\n          setEntry(entry)\n        }\n\n        callback(entry)\n\n        if (once && entry.isIntersecting) intersection.disconnect()\n      },\n      {\n        root,\n        rootMargin,\n        threshold,\n      }\n    )\n    intersection.observe(element)\n\n    return () => {\n      intersection.disconnect()\n    }\n  }, [element, root, rootMargin, threshold, lazy, once, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","/**\n * This function allows you to set an interval in a functional component\n * @param {function} callback - The callback function\n * @param {number} delay - The delay between each interval\n */\n\nimport { useEffect } from 'react'\n\nexport function useInterval(callback, delay = 1000, deps = []) {\n  useEffect(() => {\n    const interval = setInterval(callback, delay)\n    return () => clearInterval(interval)\n  }, [delay, ...deps])\n}\n","/*\n  This hook checks if the device has a touch screen. It checks for the touchstart event,\n  as well as the maxTouchPoints property on the navigator object. It also checks the\n  msMaxTouchPoints property, which is specific to Microsoft browsers.\n*/\n\nimport { useEffect, useState } from 'react'\n\n/**\n * @name useIsTouchDevice\n * @description A React hook that detects if the device supports touch.\n * @returns {boolean} Whether the device supports touch or not.\n */\n\nexport function useIsTouchDevice() {\n  const [isTouchDevice, setIsTouchDevice] = useState()\n\n  useEffect(() => {\n    function onResize() {\n      setIsTouchDevice('ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)\n    }\n\n    window.addEventListener('resize', onResize, false)\n    onResize()\n\n    return () => {\n      window.removeEventListener('resize', onResize, false)\n    }\n  }, [])\n\n  return isTouchDevice\n}\n","import { useEffect, useState } from 'react'\n\n/**\n * @name useMediaQuery\n * @description A React hook that detects whether a media query is true or false.\n * @param {string} queryString The media query to test against.\n * @returns {boolean} Whether the media query is true or false.\n */\n\nexport function useMediaQuery(queryString) {\n  const [isMatch, setIsMatch] = useState()\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(queryString)\n\n    function onChange() {\n      setIsMatch(mediaQuery.matches)\n    }\n\n    mediaQuery.addEventListener('change', onChange, false)\n    onChange()\n\n    return () => mediaQuery.removeEventListener('change', onChange, false)\n  }, [queryString])\n\n  return isMatch\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport debounce from 'just-debounce-it'\n\n/**\n * useResizeObserver - observe elements dimensions using ResizeObserver\n * @param {Boolean} lazy - should return a state or not\n * @param {Number} debounce - minimum delay between two ResizeObserver computations\n * @param {String} box - ResizeObserver parameter\n * @param {Function} callback - called on value change\n * @param {Array} deps - props that should trigger a new computation\n */\n\nexport function useResizeObserver(\n  { lazy = false, debounce: debounceDelay = 500, box = 'border-box', callback = () => {} } = {},\n  deps = [],\n) {\n  const entryRef = useRef({})\n  const [entry, setEntry] = useState({})\n  const [element, setElement] = useState()\n\n  useEffect(() => {\n    if (!element) return\n\n    const onResize = debounce(\n      ([entry]) => {\n        entryRef.current = entry\n\n        callback(entry)\n\n        if (!lazy) {\n          setEntry(entry)\n        }\n      },\n      debounceDelay,\n      true,\n    )\n\n    const resizeObserver = new ResizeObserver(onResize)\n    resizeObserver.observe(element, { box })\n\n    return () => {\n      resizeObserver.disconnect()\n      onResize.cancel()\n    }\n  }, [element, lazy, debounceDelay, box, ...deps])\n\n  const get = useCallback(() => entryRef.current, [])\n\n  return [setElement, lazy ? get : entry]\n}\n","import { useResizeObserver } from './use-resize-observer'\nimport debounce from 'just-debounce-it'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { create } from 'zustand'\nimport { createNanoEvents } from 'nanoevents'\n\nfunction removeParentSticky(element) {\n  const position = getComputedStyle(element).position\n\n  const isSticky = position === 'sticky'\n\n  if (isSticky) {\n    element.style.setProperty('position', 'static')\n    element.dataset.sticky = 'true'\n  }\n\n  if (element.offsetParent) {\n    removeParentSticky(element.offsetParent)\n  }\n}\n\nfunction addParentSticky(element) {\n  if (element?.dataset?.sticky === 'true') {\n    element.style.removeProperty('position')\n    element.dataset.sticky = 'true'\n    delete element.dataset.sticky\n  }\n\n  if (element.parentNode) {\n    addParentSticky(element.parentNode)\n  }\n}\n\nfunction offsetTop(element, accumulator = 0) {\n  const top = accumulator + element.offsetTop\n  if (element.offsetParent) {\n    return offsetTop(element.offsetParent, top)\n  }\n  return top\n}\n\nfunction offsetLeft(element, accumulator = 0) {\n  const left = accumulator + element.offsetLeft\n  if (element.offsetParent) {\n    return offsetLeft(element.offsetParent, left)\n  }\n  return left\n}\n\nfunction scrollTop(element, accumulator = 0) {\n  const top = accumulator + element.scrollTop\n  if (element.offsetParent) {\n    return scrollTop(element.offsetParent, top)\n  }\n  return top + window.scrollY\n}\n\nfunction scrollLeft(element, accumulator = 0) {\n  const left = accumulator + element.scrollLeft\n  if (element.offsetParent) {\n    return scrollLeft(element.offsetParent, left)\n  }\n  return left + window.scrollX\n}\n\nconst useStore = create((set) => ({\n  elements: [],\n  addElement: (element) => {\n    set((state) => ({\n      elements: [...state.elements, element],\n    }))\n  },\n  removeElement: (element) => {\n    set((state) => ({\n      elements: state.elements.filter((el) => el !== element),\n    }))\n  },\n}))\n\nfunction observe(element) {\n  useStore.getState().addElement(element)\n}\n\nfunction unobserve(element) {\n  useStore.getState().removeElement(element)\n}\n\nconst emitter = createNanoEvents()\n\nfunction resize() {\n  emitter.emit('resize')\n}\n\n/**\n * useRect - observe elements BoundingRect\n * @param {boolean} ignoreTransform - should include transform in the returned rect or not\n * @param {boolean} ignoreSticky - should ingnore parent sticky elements or not\n * @param {boolean} lazy - should return a state or a getter\n * @param {number} debounce - minimum delay between two rect computations\n * @param {Function} callback - called on value change\n */\n\nexport function useRect({\n  ignoreTransform = false,\n  ignoreSticky = true,\n  lazy = false,\n  debounce: debounceDelay = 500,\n  callback = () => {},\n} = {}) {\n  const [element, setElement] = useState()\n  const [rect, setRect] = useState({})\n  const rectRef = useRef({})\n\n  const onElementResize = useCallback(\n    (entry) => {\n      const width = entry.borderBoxSize[0].inlineSize\n      const height = entry.borderBoxSize[0].blockSize\n\n      rectRef.current.width = width\n      rectRef.current.height = height\n\n      callback(rectRef.current)\n\n      if (!lazy) {\n        setRect({ ...rectRef.current })\n      }\n    },\n    [lazy],\n  )\n\n  const [setResizeObserverElement] = useResizeObserver(\n    {\n      lazy: true,\n      debounce: debounceDelay,\n      callback: onElementResize,\n    },\n    [debounceDelay, onElementResize],\n  )\n\n  const elements = useStore(({ elements }) => elements)\n\n  const onParentsResize = useCallback(() => {\n    if (!element) return\n\n    let top, left\n\n    if (ignoreSticky) removeParentSticky(element)\n    if (ignoreTransform) {\n      top = offsetTop(element)\n      left = offsetLeft(element)\n    } else {\n      const rect = element.getBoundingClientRect()\n      top = rect.top + scrollTop(element)\n      left = rect.left + scrollLeft(element)\n    }\n    if (ignoreSticky) addParentSticky(element)\n\n    rectRef.current.top = top\n    rectRef.current.left = left\n\n    callback(rectRef.current)\n\n    if (!lazy) {\n      setRect({ ...rectRef.current })\n    }\n  }, [ignoreTransform, ignoreSticky, lazy, element])\n\n  // resize if body height changes\n  useEffect(() => {\n    const debouncedOnParentsResize = debounce(onParentsResize, debounceDelay, true)\n\n    const resizeObserver = new ResizeObserver(debouncedOnParentsResize)\n    resizeObserver.observe(document.body)\n\n    elements.forEach((element) => {\n      resizeObserver.observe(element)\n    })\n\n    return () => {\n      resizeObserver.disconnect()\n      debouncedOnParentsResize.cancel()\n    }\n  }, [elements, debounceDelay, onParentsResize])\n\n  const getRect = useCallback(() => rectRef.current, [])\n\n  useEffect(() => {\n    function onResize() {\n      if (!element) return\n      const elementRect = element.getBoundingClientRect()\n\n      rectRef.current.width = elementRect.width\n      rectRef.current.height = elementRect.height\n\n      onParentsResize()\n    }\n\n    const unbind = emitter.on('resize', onResize)\n\n    return unbind\n  }, [element, onParentsResize])\n\n  return [\n    (node) => {\n      setElement(node)\n      setResizeObserverElement(node)\n    },\n    lazy ? getRect : rect,\n  ]\n}\n\nuseRect.observe = observe\nuseRect.unobserve = unobserve\nuseRect.resize = resize\n","// This code is used to extract the contents of a component's children and return them as an array.\n// The code accepts two arguments, the names of the components that it should extract, and the children to extract from.\n// The code returns an array of the children of the components passed in the types argument.\n// based on:\n// https://medium.com/swlh/bring-vue-named-slots-to-react-87684188f18e\n\nimport { useMemo } from 'react'\n\nexport function useSlots(types = [], children = []) {\n  const _children = useMemo(() => children && [children].flat(), [children])\n  const _types = useMemo(() => types && [types].flat(), [types])\n  const slots = useMemo(() => {\n    if (!_children || !_types) {\n      return\n    }\n\n    const slots = _types.map((type) => _children.find((el) => el.type === type)?.props.children)\n\n    return types[0] ? slots : slots[0]\n  }, [_children, _types])\n\n  return slots\n}\n","import { useEffect, useState } from 'react'\nimport debounce from 'just-debounce-it'\n\n/**\n * @name useWindowSize\n * @description A React hook that listens to window size.\n * @returns {object} { width, height }\n */\n\nexport function useWindowSize(debounceDelay = 500) {\n  const [width, setWidth] = useState()\n  const [height, setHeight] = useState()\n\n  useEffect(() => {\n    const onWindowRezise = debounce(\n      () => {\n        setWidth(Math.min(window.innerWidth, document.documentElement.clientWidth))\n        setHeight(Math.min(window.innerHeight, document.documentElement.clientHeight))\n      },\n      debounceDelay,\n      true,\n    )\n\n    window.addEventListener('resize', onWindowRezise, false)\n\n    onWindowRezise()\n\n    return () => window.removeEventListener('resize', onWindowRezise, false)\n  }, [debounceDelay])\n\n  return { width, height }\n}\n"],"names":["useOutsideClickEvent","ref","callback","useCallback","event","current","contains","target","useEffect","document","addEventListener","handleClickOutside","removeEventListener","useIsClient","_useState","useState","isClient","setClient","useDebug","useMemo","location","window","href","searchParams","URLSearchParams","search","isDebug","includes","has","process","env","NODE_ENV","isProduction","useDocumentReadyState","readyState","setReadyState","onStateChange","useFrame","priority","Tempus","add","remove","useIntersectionObserver","_temp","deps","_ref","root","_ref$root","rootMargin","_ref$rootMargin","threshold","_ref$threshold","_ref$once","once","lazy","_ref$lazy","_ref$callback","useRef","entry","setEntry","element","setElement","intersection","IntersectionObserver","entryRef","isIntersecting","disconnect","observe","get","useInterval","delay","interval","setInterval","clearInterval","useIsTouchDevice","isTouchDevice","setIsTouchDevice","onResize","navigator","maxTouchPoints","msMaxTouchPoints","useMediaQuery","queryString","isMatch","setIsMatch","matchMedia","onChange","mediaQuery","matches","useResizeObserver","debounce","debounceDelay","_ref$debounce","box","_ref$box","_useState2","_ref2","resizeObserver","ResizeObserver","cancel","removeParentSticky","getComputedStyle","position","style","setProperty","dataset","sticky","offsetParent","addParentSticky","_element$dataset","removeProperty","parentNode","offsetTop","accumulator","top","offsetLeft","left","scrollTop","scrollY","scrollLeft","scrollX","useStore","create","set","elements","addElement","state","concat","removeElement","filter","el","emitter","createNanoEvents","useRect","_ref$ignoreTransform","ignoreTransform","_ref$ignoreSticky","ignoreSticky","rect","setRect","onElementResize","borderBoxSize","blockSize","rectRef","width","inlineSize","height","_extends","setResizeObserverElement","onParentsResize","_rect","getBoundingClientRect","debouncedOnParentsResize","body","forEach","getRect","on","elementRect","node","useSlots","types","children","_children","flat","_types","slots","map","type","_children$find","find","props","useWindowSize","setWidth","setHeight","onWindowRezise","Math","min","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","getState","unobserve","resize","emit"],"mappings":"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"}