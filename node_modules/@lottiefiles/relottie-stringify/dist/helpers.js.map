{"version":3,"sources":["../src/helpers.ts"],"sourcesContent":["/**\n * Copyright 2023 Design Barn Inc.\n */\n\nimport type { NodeValue, Element, Collection, Attribute, Root, ObjectNode } from '@lottiefiles/last';\n\nexport type JSONValue = string | number | boolean | null | JSONObject | JSONArray;\n\nexport interface JSONObject {\n  [x: string]: JSONValue;\n}\n\nexport interface JSONArray extends Array<JSONValue> {}\n\n/**\n * Evaluates a Lottie AST node into a JavaScript value.\n * @returns The JavaScript value for the node.\n */\nexport function evaluate(node: NodeValue): JSONValue {\n  const getObjectValue = (objectLikeNode: Root | ObjectNode): JSONObject => {\n    const objectValue: JSONObject = {};\n\n    objectLikeNode.children.forEach((member: Element | Collection | Attribute) => {\n      const key = typeof member.key === 'string' ? member.key : member.key.value;\n\n      const value = member.children[0];\n\n      if (value) {\n        objectValue[key] = evaluate(value);\n      }\n    });\n\n    return objectValue;\n  };\n\n  switch (node.type) {\n    case 'primitive':\n      switch (typeof node.value) {\n        case 'number':\n          return node.value;\n\n        case 'string':\n          return node.value;\n\n        case 'boolean':\n          return node.value;\n\n        case 'object':\n          return null;\n\n        default:\n          throw new Error(`Unknown Primitive type ${node.type}.`);\n      }\n\n    case 'attribute':\n      return node.children[0] ? evaluate(node.children[0]) : null;\n\n    case 'collection':\n      return node.children[0] ? evaluate(node.children[0]) : null;\n\n    case 'element':\n      return node.children[0] ? evaluate(node.children[0]) : null;\n\n    case 'array':\n      return node.children.map(evaluate);\n\n    case 'root':\n      return getObjectValue(node);\n\n    case 'object':\n      return getObjectValue(node);\n\n    default:\n      throw new Error(`Unknown node type ${node.type}.`);\n  }\n}\n"],"mappings":";AAkBO,kBAAkB,MAA4B;AACnD,QAAM,iBAAiB,CAAC,mBAAkD;AACxE,UAAM,cAA0B,CAAC;AAEjC,mBAAe,SAAS,QAAQ,CAAC,WAA6C;AAC5E,YAAM,MAAM,OAAO,OAAO,QAAQ,WAAW,OAAO,MAAM,OAAO,IAAI;AAErE,YAAM,QAAQ,OAAO,SAAS;AAE9B,UAAI,OAAO;AACT,oBAAY,OAAO,SAAS,KAAK;AAAA,MACnC;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT;AAEA,UAAQ,KAAK;AAAA,SACN;AACH,cAAQ,OAAO,KAAK;AAAA,aACb;AACH,iBAAO,KAAK;AAAA,aAET;AACH,iBAAO,KAAK;AAAA,aAET;AACH,iBAAO,KAAK;AAAA,aAET;AACH,iBAAO;AAAA;AAGP,gBAAM,IAAI,MAAM,0BAA0B,KAAK,OAAO;AAAA;AAAA,SAGvD;AACH,aAAO,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,EAAE,IAAI;AAAA,SAEpD;AACH,aAAO,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,EAAE,IAAI;AAAA,SAEpD;AACH,aAAO,KAAK,SAAS,KAAK,SAAS,KAAK,SAAS,EAAE,IAAI;AAAA,SAEpD;AACH,aAAO,KAAK,SAAS,IAAI,QAAQ;AAAA,SAE9B;AACH,aAAO,eAAe,IAAI;AAAA,SAEvB;AACH,aAAO,eAAe,IAAI;AAAA;AAG1B,YAAM,IAAI,MAAM,qBAAqB,KAAK,OAAO;AAAA;AAEvD;","names":[]}